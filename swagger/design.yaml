swagger: "2.0"
info:
  description: "This is a sample server which is defined for User Registration and Login."
  version: "1.0.0"
  title: "Swagger UserInfo"
tags:
- name: "user"
  description: "Operations about user"
schemes:
- "http"
paths:
  /user/register:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This API is used to create/register new user."
      operationId: "register"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/UserRegister"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Required params missed"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: "This API is used to login the user into system."
      operationId: "login"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The user name for login"
        required: true
        schema:
          $ref: "#/definitions/UserLogin"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserLoginResponse"
          headers:
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied<br>Required params missed<br>User not Exists"
definitions:
  UserRegister:
    type: "object"
    properties:
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  UserLogin:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
  UserLoginResponse:
    type: "object"
    properties:
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"